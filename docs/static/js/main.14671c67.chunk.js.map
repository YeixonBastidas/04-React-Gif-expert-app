{"version":3,"sources":["components/addCaptegory.js","helpers/getGif.js","components/gitGridItem.js","components/gifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cast","type","value","onChange","target","placeholder","getGif","category","a","url","encodeURI","listImages","fetch","then","x","json","data","map","items","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","result","UseFetchGifs","item","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAiBrC,OACI,0BAAMC,SAXY,SAACC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,4BAAQA,GAAR,CAAcP,OAChCC,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBS,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,QAmBfG,YAAY,uB,uBC1BfC,EAAM,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,sDAGdI,EAAa,GAHC,SAIZC,MAAMH,GACLI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAC,GACJA,EAAEE,KAAKC,KAAI,SAAAC,GAAK,OACZP,EAAU,sBAAOA,GAAP,CAAkB,CACxBQ,GAAID,EAAMC,GACVC,MAAQF,EAAME,MACdX,IAAKS,EAAMG,OAAOC,iBAAiBb,aAXjC,gCAgBLE,GAhBK,2CAAH,sDCYJY,EATK,SAAC,GAAmB,IAAlBd,EAAiB,EAAjBA,IAAKW,EAAY,EAAZA,MACvB,OACI,yBAAKI,UAAU,0CACX,yBAAKC,IAAKhB,EAAKiB,IAAKN,IACpB,2BAAIA,KCmBDO,EApBC,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECHJ,SAACA,GAAc,IAAD,EACZf,mBAAS,CAC/BwB,KAAM,GACNY,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAW,WACPzB,EAAOC,GACNM,MAAK,SAAAmB,GACFF,EAAS,CACLd,KAAOgB,EACPJ,SAAU,SAGnB,CAACrB,IAEGsB,EDXwBI,CAAa1B,GAAhCc,EAFgB,EAErBL,KAAaY,EAFQ,EAERA,QAGpB,OACI,oCACA,4BAAKrB,GACJqB,GAAW,uBAAGJ,UAAU,mCAAb,eACZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAACiB,GAAD,OACP,kBAAC,EAAD,eAAcC,IAAKD,EAAKf,IAAQe,UEQtCE,EAtBM,WAAO,IAAD,EACa5C,mBAAS,CAAC,gBADvB,mBAChB6C,EADgB,KACJ9C,EADI,KAGvB,OACG,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEM8C,EAAWpB,KAAI,SAACH,EAAGwB,GAAJ,OACb,kBAAC,EAAD,CAASH,IAAKG,EAAG/B,SAAUO,U,MCX3CyB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.14671c67.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n        \r\n    const handlerInput = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cast => [...cast, inputValue]);\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={handlerSubmit}>\r\n            <input \r\n                type=\"Text\"\r\n                value={inputValue}\r\n                onChange={handlerInput}\r\n                placeholder='Nombre del heroe'\r\n                />\r\n        </form>\r\n     );\r\n}\r\n \r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const getGif = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=gmBDoqGS62PfvJFghwL13mtZoVIE6e1I`;\r\n    \r\n    let listImages = [];\r\n    await fetch(url)\r\n          .then(x => x.json())\r\n          .then(x =>  {                \r\n            x.data.map(items => (\r\n                listImages = [...listImages,{\r\n                    id: items.id,\r\n                    title : items.title,\r\n                    url: items.images.downsized_medium.url\r\n                }]\r\n            ));  \r\n          });\r\n\r\n          return listImages;\r\n}\r\n","import React from 'react';\r\nimport '../index'\r\n\r\nconst GifGridItem = ({url, title }) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div> \r\n    );\r\n}\r\n \r\nexport default GifGridItem;","import React from 'react';\r\nimport { UseFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './gitGridItem'\r\nimport '../index'\r\n\r\n\r\nconst GifGrid = ({category}) => {   \r\n\r\n    const {data:images, loading} = UseFetchGifs(category);\r\n    \r\n   \r\n    return ( \r\n        <>\r\n        <h3>{category}</h3>   \r\n        {loading && <p className='animate__animated animate_flash'>Cargando...</p> }  \r\n        <div className='card-grid'>                  \r\n            {\r\n                images.map( (item) => (\r\n                     <GifGridItem  key={item.id} {...item}/>   \r\n                ))\r\n            }            \r\n        </div>   \r\n        </>     \r\n     );\r\n}\r\n \r\nexport default GifGrid;","import { useState, useEffect } from \"react\"\r\nimport { getGif } from '../helpers/getGif';\r\n\r\nexport const UseFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGif(category)\r\n        .then(result => {\r\n            setState({\r\n                data : result,\r\n                loading : false\r\n            });\r\n        });\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/addCaptegory';\r\nimport GifGrid from './components/gifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n    \r\n    return (\r\n       <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n        \r\n        \r\n        <ol>\r\n            {\r\n              categories.map((x, i) => (\r\n                <GifGrid key={i} category={x}/>\r\n              ))  \r\n            }\r\n        </ol> \r\n       </> \r\n   )\r\n}\r\n\r\n\r\nexport default GifExpertApp;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}